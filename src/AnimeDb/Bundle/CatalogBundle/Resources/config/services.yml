services:
    anime_db.pagination:
        class: AnimeDb\Bundle\CatalogBundle\Service\Pagination

    # Plugins chain
    anime_db.plugin.filler:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Filler\Chain
        scope: request
    anime_db.plugin.search:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Search\Chain
        scope: request
    anime_db.plugin.import:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Import\Chain
        scope: request
    anime_db.plugin.item:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Item\Chain
        scope: request
    anime_db.plugin.setting:
        class: AnimeDb\Bundle\CatalogBundle\Plugin\Setting\Chain
        scope: request

    # Twig extension
    anime_db.twig_extension:
        class: AnimeDb\Bundle\CatalogBundle\Service\TwigExtension
        arguments: [@router]
        tags:
            - { name: twig.extension }

    # cURL client for Buzz
    buzz.client.curl:
        class:  Buzz\Client\Curl
        public: false
        calls:
            - [setVerifyPeer, [false]]
    # Buzz browser
    buzz.browser:
        class:     Buzz\Browser
        arguments: ['@buzz.client.curl']

    # Kernel request listener
    anime_db.listener.request:
        class: AnimeDb\Bundle\CatalogBundle\Event\Listener\Request
        tags: [{ name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: -255 }]
        arguments: [ @gedmo.listener.translatable, @validator ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ true ] ]
